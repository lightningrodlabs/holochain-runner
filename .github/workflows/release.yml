name: Release

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/create-gh-release-action@v1
        env:
          # (required)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          # (required)
          bin: holochain-runner
          tar: all
          zip: none
        env:
          # (required)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: build lair
        run: |
          cargo install lair_keystore --root . --version 0.2.0
      - name: upload binary (ubuntu only)
        if: ${{ runner.os == 'Linux' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp bin/lair-keystore lair-keystore-x86_64-unknown-linux-gnu
          gh release upload "${GITHUB_REF#refs/tags/}" "lair-keystore-x86_64-unknown-linux-gnu" --clobber
      - name: upload binary (macos only)
        if: ${{ runner.os == 'macOs' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp bin/lair-keystore lair-keystore-x86_64-apple-darwin
          gh release upload "${GITHUB_REF#refs/tags/}" "lair-keystore-x86_64-apple-darwin" --clobber
      - name: upload binary (Windows only)
        if: ${{ runner.os == 'Windows' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          Copy-Item bin/lair-keystore.exe -Destination lair-keystore-x86_64-pc-windows-msvc.exe
          gh release upload "$($env:GITHUB_REF -replace "refs/tags/")" "lair-keystore-x86_64-pc-windows-msvc.exe" --clobber
